usethis::use_package("microbenchmark")
usethis::use_r("benchmark")
?microbenchmark::microbenchmark
odbc::odbcListDataSources()
db_cons <- list(
sql_server = DBI::dbConnect(odbc::odbc(), "SQL Server (DSN)"),
teradata = DBI::dbConnect(odbc::odbc(), "Teradata (DSN)")
)
library(DBI)
con <- dbConnect(odbc::odbc(), "SQL Server (DSN)", timeout = 10)
db_cons <- list(
sql_server = DBI::dbConnect(odbc::odbc(), "SQL Server (DSN)"),
teradata = DBI::dbConnect(odbc::odbc(), "Teradata (DSN)")
)
f <- function(con) {
DBI::dbWriteTable(con, "cars_test", mtcars, overwrite = TRUE)
}
f(db_cons)
purrr::map(db_cons, f)
?packrat
source('~/.active-rstudio-document', echo=TRUE)
mb_results <- .Last.value
mb_results
mb_results
as.data.frame(mb_results)
install.packages(c("anytime", "ballr", "DT", "ipred", "lattice", "lobstr", "MASS", "Matrix", "ModelMetrics", "pander", "ps", "raster", "rcmdcheck", "repr", "roxygen2", "sessioninfo", "shiny", "shinythemes", "sys", "webmockr", "xts", "yardstick"))
install.packages(c("anytime", "ballr", "DT", "ipred", "lattice", "lobstr", "MASS", "Matrix", "ModelMetrics", "pander", "ps", "raster", "rcmdcheck", "repr", "roxygen2", "sessioninfo", "shiny", "shinythemes", "sys", "webmockr", "xts", "yardstick"))
?parse
?as.function
as.function(list(a = , b = , a + b))
as.function(alist(a = , b = , a + b))
mb_list <- lapply(db_cons, function(con) as.function(alist(con = con, f(con))))
db_cons <- list(
sql_server = DBI::dbConnect(odbc::odbc(), "SQL Server (DSN)"),
teradata = DBI::dbConnect(odbc::odbc(), "Teradata (DSN)")
)
mb_list <- lapply(db_cons, function(con) as.function(alist(con = con, f(con))))
mb_list
names(mb_list)
mb_results <- microbenchmark::microbenchmark(list = mb_list, times = 2)
mb_results
f
mb_list[[1]]
mb_list[[1]]()
f <- function(con) {
DBI::dbWriteTable(con, "cars_test", mtcars, overwrite = TRUE)
}
mb_list[[1]]()
db_cons <- list(
sql_server = DBI::dbConnect(odbc::odbc(), "SQL Server (DSN)"),
teradata = DBI::dbConnect(odbc::odbc(), "Teradata (DSN)")
)
f <- function(con) {
DBI::dbWriteTable(con, "cars_test", mtcars, overwrite = TRUE)
}
purrr::map(db_cons, f)
mb_list <- lapply(db_cons, function(con) as.function(alist(con = con, f(con))))
names(mb_list)
mb_results <- microbenchmark::microbenchmark(list = mb_list, times = 2)
mb_results
mb_list_c <- lapply(db_cons, function(con) as.function(alist(con = con, f(con))))
mb_list <- list(function() f(db_con[1]),
function() f(db_con[2]))
mb_list
mb_list_c
names(mb_list) <- names(db_cons)
mb_list
mb_list_c
mb_list_c[[1]]
mb_list[[1]]
mb_list[[1]]()
mb_list <- list(function() f(db_cons[1]),
function() f(db_cons[2]))
names(mb_list) <- names(db_cons)
mb_list[[1]]()
db_cons[1]
mb_list <- list(function() f(db_cons[1]),
function() f(db_cons[2]))
names(mb_list) <- names(db_cons)
db_cons <- list(
sql_server = DBI::dbConnect(odbc::odbc(), "SQL Server (DSN)"),
teradata = DBI::dbConnect(odbc::odbc(), "Teradata (DSN)")
)
purrr::map(db_cons, f)
f <- function(con) {
DBI::dbWriteTable(con, "cars_test", mtcars, overwrite = TRUE)
}
purrr::map(db_cons, ~DBI::dbRemoveTable(., "cars_test"))
f <- function(con) {
DBI::dbWriteTable(con, "cars_test", mtcars, overwrite = TRUE)
}
mb_list_c <- lapply(db_cons, function(con) as.function(alist(con = con, f(con))))
names(mb_list_c)
mb_results <- microbenchmark::microbenchmark(list = mb_list_c, times = 5)
purrr::map(db_cons, ~DBI::dbRemoveTable(., "cars_test"))
mb_results
mb_list_c
mb_list_c$sql_server()
mb_list_c$sql_server()
mb_list_c <- lapply(db_cons, function(con) function() f(con))
names(mb_list_c)
mb_results <- microbenchmark::microbenchmark(list = mb_list_c, times = 5)
purrr::map(db_cons, ~DBI::dbRemoveTable(., "cars_test"))
mb_list_c
db_cons <- list(
sql_server = DBI::dbConnect(odbc::odbc(), "SQL Server (DSN)"),
teradata = DBI::dbConnect(odbc::odbc(), "Teradata (DSN)")
)
f <- function(con) {
DBI::dbWriteTable(con, "cars_test", mtcars, overwrite = TRUE)
}
mb_list_c <- lapply(db_cons, function(con) function() f(con))
names(mb_list_c)
mb_list_c
mb_list_c$sql_server()
mb_list_c$teradata()
lapply(db_cons, DBI::dbListTables)
lapply(db_cons, function(con) stringr::str_detect(DBI::dbListTables(con), "cars_test"))
lapply(db_cons, function(con) any(stringr::str_detect(DBI::dbListTables(con), "cars_test")))
purrr::walk(db_cons, ~DBI::dbRemoveTable(., "cars_test"))
lapply(db_cons, function(con) any(stringr::str_detect(DBI::dbListTables(con), "cars_test")))
mb_list_c$sql_server()
mb_list_c$teradata()
lapply(db_cons, function(con) any(stringr::str_detect(DBI::dbListTables(con), "cars_test")))
purrr::walk(db_cons, ~DBI::dbRemoveTable(., "cars_test"))
mb_results <- microbenchmark::microbenchmark(list = mb_list_c, times = 5)
lapply(db_cons, function(con) any(stringr::str_detect(DBI::dbListTables(con), "cars_test")))
mb_results <- microbenchmark::microbenchmark(list = mb_list_c, times = 5)
mb_list_c$sql_server()
mb_list_c$teradata()
mb_list_c <- lapply(db_cons, function(con) f(con))
str(mb_list_c)
mb_list_c <- lapply(db_cons, function(con) function() f(con))
str(mb_list_c)
